---
title: TAS for VMs v6.0 Release notes
owner: Release Engineering
---

These are the release notes for <%= vars.app_runtime_first %> <%= vars.v_major_version %>.

<%= vars.app_runtime_abbr %> is certified by the Cloud Foundry Foundation for 2023.

For more information about the Cloud Foundry Certified Provider Program, see [How Do I Become a Certified
Provider?](https://www.cloudfoundry.org/certified-platforms-how-to/) on the Cloud Foundry website.

Because VMware uses the Percona Distribution for MySQL, expect a time lag between Oracle releasing a MySQL patch and VMware releasing
<%= vars.app_runtime_abbr %> containing that patch.

<hr>

## <a id='releases'></a> Releases

### <a id='6.0.1'></a> 6.0.1

**Release Date:** 04/17/2024

* **[Feature]** Add option to enable concurrent read/writes for HTTP/1
* **[Feature Improvement]** Remove requirement for manually enabling log cache syslog ingestion when upgrading
* **[Bug Fix]** Fix pre-start hang in internal MySQL
* Bump backup-and-restore-sdk to version `1.19.10`
* Bump bpm to version `1.2.18`
* Bump capi to version `1.177.0`
* Bump diego to version `2.97.0`
* Bump java-native-image-cnb-buildpack to version `0.10.2`
* Bump log-cache to version `3.0.12`
* Bump loggregator to version `107.0.14`
* Bump loggregator-agent to version `8.0.3`
* Bump mapfs to version `1.2.66`
* Bump metric-registrar to version `3.0.3`
* Bump mysql-monitoring to version `10.13.0`
* Bump nats to version `56.18.0`
* Bump nfs-volume to version `7.1.61`
* Bump otel-collector to version `0.4.1`
* Bump push-apps-manager-release to version `677.0.42`
* Bump push-usage-service-release to version `674.0.96`
* Bump pxc to version `1.0.26`
* Bump web-servers-cnb-buildpack to version `0.11.1`
* Bump smb-volume to version `3.1.64`
* Bump smoke-tests to version `4.10.0`
* Bump statsd-injector to version `1.11.40`
* Bump syslog to version `12.2.4`
* Bump system-metrics-scraper to version `4.0.8`
* Bump uaa to version `77.5.0`

<table border="1" class="nice">
  <thead>
    <tr>
      <th>Component</th>
      <th>Version</th>
      <th>Release Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>ubuntu-jammy stemcell</td><td>1.423</td><td></td></tr>
    <tr><td>backup-and-restore-sdk</td><td>1.19.10</td>
      <td>
        <details>
          <summary>v1.19.10</summary>
          <pre style="max-width: 30em">
  ## Changes
  * Golang: Updated to v1.22.2. (#1621)
  ## Dependencies
  * **net:** Updated to v0.24.0.<br>For more information, see [net](https://github.com/golang/net).
  * **oauth2:** Updated to v0.19.0.<br>For more information, see [oauth2](https://github.com/golang/oauth2).
          </pre>
        </details>
        <details>
          <summary>v1.19.9</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **storage:** Updated to v1.40.0.<br>For more information, see [storage](https://github.com/googleapis/google-cloud-go).
  * **bosh-backup-and-restore:** Updated to v1.9.62.<br>For more information, see [bosh-backup-and-restore](https://github.com/cloudfoundry-incubator/bosh-backup-and-restore).
  * **mysql:** Updated to v1.8.1.<br>For more information, see [mysql](https://github.com/go-sql-driver/mysql).
  * **v2:** Updated to v2.17.1.<br>For more information, see [v2](https://github.com/onsi/ginkgo).
  * **gomega:** Updated to v1.32.0.<br>For more information, see [gomega](https://github.com/onsi/gomega).
  * **api:** Updated to v0.172.0.<br>For more information, see [api](https://github.com/googleapis/google-api-go-client).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>binary-offline-buildpack</td><td>1.1.10</td><td></td></tr>
    <tr><td>bosh-dns-aliases</td><td>0.0.4</td><td></td></tr>
    <tr><td>bpm</td><td>1.2.18</td><td></td></tr>
    <tr><td>capi</td><td>1.177.0</td><td></td></tr>
    <tr><td>cf-autoscaling</td><td>250.2.2</td><td></td></tr>
    <tr><td>cf-cli</td><td>1.60.0</td><td></td></tr>
    <tr><td>cf-networking</td><td>3.45.0</td><td></td></tr>
    <tr><td>cflinuxfs3</td><td>0.387.0</td><td></td></tr>
    <tr><td>cflinuxfs4</td><td>1.82.0</td><td></td></tr>
    <tr><td>count-cores-indicator</td><td>2.0.0</td><td></td></tr>
    <tr><td>credhub</td><td>2.12.66</td><td></td></tr>
    <tr><td>diego</td><td>2.97.0</td>
      <td>
        <details>
          <summary>v2.97.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Adds support for comma-delimited destinations in ASGs
  - See: https://github.com/cloudfoundry/executor/pull/96 and https://github.com/cloudfoundry/bbs/pull/94
  - Bump bosh package blobs
  - Bumps `jq` to `1.7.1`
  - Bumps `tar`
  - Bump go.mod dependencies
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/diego-release/compare/v2.96.0...v2.97.0
  ## Resources
  - [Download release 2.97.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/diego-release?version=2.97.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>dotnet-core-offline-buildpack</td><td>2.4.26</td><td></td></tr>
    <tr><td>garden-runc</td><td>1.51.0</td><td></td></tr>
    <tr><td>go-offline-buildpack</td><td>1.10.17</td><td></td></tr>
    <tr><td>java-offline-buildpack</td><td>4.67.1</td><td></td></tr>
    <tr><td>java-native-image-cnb-buildpack</td><td>0.10.2</td>
      <td>
        <details>
          <summary>0.10.2</summary>
          <pre style="max-width: 30em">
  Components:
  * [buildpack v0.12.2](https://github.com/pivotal-cf/java-native-image-cnb-buildpack/releases/tag/v0.12.2)
          </pre>
        </details>
        <details>
          <summary>0.10.1</summary>
          <pre style="max-width: 30em">
  Components:
  * [buildpack v0.12.1](https://github.com/pivotal-cf/java-native-image-cnb-buildpack/releases/tag/v0.12.1)
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>log-cache</td><td>3.0.12</td>
      <td>
        <details>
          <summary>v3.0.12</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump packaged Golang to go1.21.9
  **Full Changelog**: https://github.com/cloudfoundry/log-cache-release/compare/v3.0.11...v3.0.12
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>loggregator</td><td>107.0.14</td>
      <td>
        <details>
          <summary>v107.0.14</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump to [go1.21.9](https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M/m/khALNYGdAAAJ)
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-release/compare/v107.0.13...v107.0.14
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>loggregator-agent</td><td>8.0.3</td>
      <td>
        <details>
          <summary>v8.0.3</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump to [go1.21.9](https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M/m/khALNYGdAAAJ)
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v8.0.2...v8.0.3
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>mapfs</td><td>1.2.66</td>
      <td>
        <details>
          <summary>v1.2.66</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **mapfs:** Updated to v`b0b6bfa`.<br>For more information, see [mapfs](https://github.com/cloudfoundry/mapfs).
          </pre>
        </details>
        <details>
          <summary>v1.2.65</summary>
          <pre style="max-width: 30em">
  ## Changes
  * Golang: Updated to v1.22.2. (#241)
  ## Dependencies
  * **mapfs:** Updated to v`a80b833`.<br>For more information, see [mapfs](https://github.com/cloudfoundry/mapfs).
          </pre>
        </details>
        <details>
          <summary>v1.2.64</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **v2:** Updated to v2.17.1.<br>For more information, see [v2](https://github.com/onsi/ginkgo).
  * **mapfs:** Updated to v`cd8e7e6`.<br>For more information, see [mapfs](https://github.com/cloudfoundry/mapfs).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>metric-registrar</td><td>3.0.3</td>
      <td>
        <details>
          <summary>v3.0.3</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump to [go1.21.9](https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M/m/khALNYGdAAAJ)
  **Full Changelog**: https://github.com/pivotal-cf/metric-registrar-release/compare/v3.0.2...v3.0.3
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>mysql-monitoring</td><td>10.13.0</td>
      <td>
        <details>
          <summary>v10.13.0</summary>
          <pre style="max-width: 30em">
  - Updates golang to 1.22.2
  - Updates dependencies
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>nats</td><td>56.18.0</td>
      <td>
        <details>
          <summary>v56.18.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Bump golang package dependencies
  ## ✨  Built with go 1.21.9
  **Full Changelog**: https://github.com/cloudfoundry/nats-release/compare/v56.17.0...v56.18.0
  ## Resources
  - [Download release 56.18.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/nats-release?version=56.18.0).
          </pre>
        </details>
        <details>
          <summary>v56.17.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Bump dependencies
  ## ✨  Built with go 1.21.9
  **Full Changelog**: https://github.com/cloudfoundry/nats-release/compare/v56.16.0...v56.17.0
  ## Resources
  - [Download release 56.17.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/nats-release?version=56.17.0).
          </pre>
        </details>
        <details>
          <summary>v56.16.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  * Add staticcheck config by @geofffranks in https://github.com/cloudfoundry/nats-release/pull/75
  * Bump dependancies
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/nats-release/compare/v56.15.0...v56.16.0
  ## Resources
  - [Download release 56.16.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/nats-release?version=56.16.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>nfs-volume</td><td>7.1.61</td>
      <td>
        <details>
          <summary>v7.1.61</summary>
          <pre style="max-width: 30em">
  ## Changes
  * Golang: Updated to v1.22.2 (#860)
  * Bump openssl- from 3.2.1 to 3.3.0 (#871)
  ## Dependencies
  * **nfsbroker:** Updated to v`1a70719`.<br>For more information, see [nfsbroker](https://github.com/cloudfoundry/nfsbroker).
  * **nfsv3driver:** Updated to v`35b8c6f`.<br>For more information, see [nfsv3driver](https://github.com/cloudfoundry/nfsv3driver).
          </pre>
        </details>
        <details>
          <summary>v7.1.60</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **nfsbroker:** Updated to v`8aec99d`.<br>For more information, see [nfsbroker](https://github.com/cloudfoundry/nfsbroker).
  * **nfsv3driver:** Updated to v`fb67285`.<br>For more information, see [nfsv3driver](https://github.com/cloudfoundry/nfsv3driver).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>nginx-offline-buildpack</td><td>1.2.12</td><td></td></tr>
    <tr><td>nodejs-offline-buildpack</td><td>1.8.23</td><td></td></tr>
    <tr><td>notifications</td><td>69.0.0</td><td></td></tr>
    <tr><td>notifications-ui</td><td>47.0.0</td><td></td></tr>
    <tr><td>otel-collector</td><td>0.4.1</td>
      <td>
        <details>
          <summary>v0.4.1</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump to [go1.21.9](https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M/m/khALNYGdAAAJ)
  **Full Changelog**: https://github.com/cloudfoundry/otel-collector-release/compare/v0.4.0...v0.4.1
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>php-offline-buildpack</td><td>4.6.17</td><td></td></tr>
    <tr><td>push-apps-manager-release</td><td>677.0.42</td>
      <td>
        <details>
          <summary>677.0.42</summary>
          <pre style="max-width: 30em">
  * improve performance of the search-server in making capi queries
  * New autoscaler rule editing workflow
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>push-offline-docs-release</td><td>6.0.169</td><td></td></tr>
    <tr><td>push-usage-service-release</td><td>674.0.96</td>
      <td>
        <details>
          <summary>v674.0.96</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **app-usage-service:** Updated to v`f2c8a3c`.<br>For more information, see [app-usage-service](https://github.com/pivotal-cf/app-usage-service).
          </pre>
        </details>
        <details>
          <summary>v674.0.95</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **app-usage-service:** Updated to v`193129e`.<br>For more information, see [app-usage-service](https://github.com/pivotal-cf/app-usage-service).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>pxc</td><td>1.0.26</td>
      <td>
        <details>
          <summary>v1.0.26</summary>
          <pre style="max-width: 30em">
  **Dependency bumps**
  - Updates golang to 1.22.2
  - Bumps Percona XtraDB Cluster to v8.0.36-28
  **Bugs fixed**
  - `engine_config.binlog.enabled = false` now correctly disables binary logs for MySQL 8.0
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>python-offline-buildpack</td><td>1.8.22</td><td></td></tr>
    <tr><td>r-offline-buildpack</td><td>1.2.10</td><td></td></tr>
    <tr><td>routing</td><td>0.295.0</td><td></td></tr>
    <tr><td>ruby-offline-buildpack</td><td>1.10.11</td><td></td></tr>
    <tr><td>web-servers-cnb-buildpack</td><td>0.11.1</td>
      <td>
        <details>
          <summary>0.11.1</summary>
          <pre style="max-width: 30em">
  Components:
  * [buildpack v0.14.1](https://github.com/pivotal-cf/web-servers-cnb-buildpack/releases/tag/v0.14.1)
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>silk</td><td>3.45.0</td><td></td></tr>
    <tr><td>smb-volume</td><td>3.1.64</td>
      <td>
        <details>
          <summary>v3.1.64</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **smbbroker:** Updated to v`02f340b`.<br>For more information, see [smbbroker](https://github.com/cloudfoundry/smbbroker).
  * **smbdriver:** Updated to v`fb88dd0`.<br>For more information, see [smbdriver](https://github.com/cloudfoundry/smbdriver).
          </pre>
        </details>
        <details>
          <summary>v3.1.63</summary>
          <pre style="max-width: 30em">
  ## Changes
  * Golang: Updated to v1.22.2 (#381)
  ## Dependencies
  * **smbbroker:** Updated to v`b380e77`.<br>For more information, see [smbbroker](https://github.com/cloudfoundry/smbbroker).
  * **smbdriver:** Updated to v`0c36c10`.<br>For more information, see [smbdriver](https://github.com/cloudfoundry/smbdriver).
          </pre>
        </details>
        <details>
          <summary>v3.1.62</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **v2:** Updated to v2.17.1.<br>For more information, see [v2](https://github.com/onsi/ginkgo).
  * **smbbroker:** Updated to v`f176916`.<br>For more information, see [smbbroker](https://github.com/cloudfoundry/smbbroker).
  * **smbdriver:** Updated to v`5ee16dc`.<br>For more information, see [smbdriver](https://github.com/cloudfoundry/smbdriver).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>smoke-tests</td><td>4.10.0</td>
      <td>
        <details>
          <summary>4.10.0</summary>
          <pre style="max-width: 30em">
  Create bosh final release 4.10.0
          </pre>
        </details>
        <details>
          <summary>4.9.5</summary>
          <pre style="max-width: 30em">
  Create bosh final release 4.9.5
  ## What's Changed
  * Upgrade Golang to 1.22 by @tas-operability-bot in https://github.com/pivotal/smoke-tests/pull/138
  **Full Changelog**: https://github.com/pivotal/smoke-tests/compare/4.9.5...4.9.5
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>staticfile-offline-buildpack</td><td>1.6.11</td><td></td></tr>
    <tr><td>statsd-injector</td><td>1.11.40</td>
      <td>
        <details>
          <summary>v1.11.40</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump to [go1.21.9](https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M/m/khALNYGdAAAJ)
  **Full Changelog**: https://github.com/cloudfoundry/statsd-injector-release/compare/v1.11.39...v1.11.40
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>syslog</td><td>12.2.4</td>
      <td>
        <details>
          <summary>v12.2.4</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump packaged Golang to go1.21.9
  **Full Changelog**: https://github.com/cloudfoundry/syslog-release/compare/v12.2.3...v12.2.4
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>system-metrics-scraper</td><td>4.0.8</td>
      <td>
        <details>
          <summary>v4.0.8</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  * Bump to [go1.21.9](https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M/m/khALNYGdAAAJ)
  **Full Changelog**: https://github.com/cloudfoundry/system-metrics-scraper-release/compare/v4.0.7...v4.0.8
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>uaa</td><td>77.5.0</td>
      <td>
        <details>
          <summary>v77.5.0</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  ### New UAA
  * Bump to [UAA v77.5.0](https://github.com/cloudfoundry/uaa/releases/tag/v77.5.0)
  * Spring Framework update from 5.3.33 to 5.3.34 by @dependabot in https://github.com/cloudfoundry/uaa/pull/2822, solves https://spring.io/security/cve-2024-22262
  ### Misc
  * Improve doc on proxy-related spec fields by @peterhaochen47 in https://github.com/cloudfoundry/uaa-release/pull/835
  ### Dependency Bumps
  * Bump github.com/cloudfoundry/bosh-utils from 0.0.453 to 0.0.454 in /src/acceptance_tests by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/836
  * Bump rake from 13.1.0 to 13.2.0 by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/837
  * Bump github.com/cloudfoundry/bosh-utils from 0.0.454 to 0.0.455 in /src/acceptance_tests by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/838
  * Bump rake from 13.2.0 to 13.2.1 by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/839
  * Bump github.com/cloudfoundry/bosh-utils from 0.0.455 to 0.0.456 in /src/acceptance_tests by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/840
  * Bump nokogiri from 1.16.3 to 1.16.4 by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/843
  **Full Changelog**: https://github.com/cloudfoundry/uaa-release/compare/v77.4.0...v77.5.0
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>tanzu-jammy-stack</td><td>1.0.1</td><td></td></tr>
  </tbody>
</table>


### <a id='6.0.0'></a> 6.0.0

**Release Date:** 04/09/2024

* **[Breaking Change]** Remove Developer Portal from TAS
* **[Breaking Change]** Change default internal route service port to 7070
* **[Breaking Change]** No longer install cflinuxfs3 by default
* **[Breaking Change]** Replace cpu entitlement counters with cpu_entitlement percentage gauge
* **[Breaking Change]** Remove (deprecated) Metrics Agent and Metrics Discovery Release
* **[Breaking Change]**: Move and adapt UAA password complexity policies
* **[Breaking Change]**: Remove ability of UAA to serve as a native SAML identity provider (operators can continue to configure UAA to connect to an external SAML identity provider, using the **Authentication and Enterprise SSO** pane of the <%= vars.app_runtime_abbr %> tile configuration)
* **[Breaking Change]** Gorouter's deprecated /varz and /healthz endpoints on port 8080 have been removed
* **[Breaking Change]** Absolute CPU Entitlement metrics no longer available. See [details](#absolute-cpu-entitlement-metrics-no-longer-available).
* **[Feature]** New form option and migration to opt-into allowing Small Footprint TAS to 'full' TAS upgrade.
* **[Feature]** Add support for NTLM authentication in Gorouter
* **[Feature]** CAPI Enable legacy MD5 buildpack paths
* **[Feature]** Adds Diego support for Docker workloads using OCI images
* **[Feature]**: Gorouters can be configured to prefer routing to app instances in the same AZ as the router
* **[Feature]** Operators can now turn off non-TLS load balancer health check endpoints for Gorouter and TCP Router via the "Enable HTTP load balancer health checks" properties in the "Networking" tab
* **[Feature]** dopplers can be scaled to zero
* **[Feature]** Gorouter now supports LB Health Checks over TLS on port 8443
* **[Feature]** Operators can set the property "Maximum number of network policies per app source" in the "App Developer Controls"
* **[Feature]** CF API now includes routability status from App Readiness checks in the /processes/:id/stats endpoint.
* **[Feature]** Expose a custom environment identifier on component logs forwarded via syslog
* **[Feature]** Advanced Configuration: Do not deploy Diego cells
* **[Feature Improvement]** Make database "encrypt key" setting more intentional, to avoid password-manager autofilling of the field
* **[Feature Improvement]** Reintroduce global log rate limit
* **[Feature Improvement]** OTel Collector marks OTLP Sums as monotonic if they originate from a Loggregator counter
* **[Feature Improvement]** Stop logging out of external OIDC provider when logging out of TAS
* **[Feature Improvement]** Operators can select which protocols Routing API will accept via the "Routing API Endpoint Protocol" property in the Networking tab. This property defaults to the backwards compatible option "both" that works with all tile integrations.
* **[Feature Improvement]**  Allow to configure w3c tracing headers in router
* **[Feature Improvement]** [Cloud Controller] Add option to configure Instance File Descriptor Limit
* **[Feature Improvement]** Apps using readiness health checks will now see audit.app.process.notready and audit.app.process.ready events reported to `cf events`
* **[Feature Improvement]** Garden now emits an `UnkillableContainers` metric to help identify cells that will be unable to redeploy successfully without operator intervention
* **[Feature Improvement]** Adds opt-in support for NTLM + other challenge-response based authentication using `Authorization: Negotiate` flows by automatically enabling sticky sessions for those requests.
* **[Feature Improvement]** Adds support for `Partitioned` cookies to allow for sticky sessions in embedded contexts.

<table border="1" class="nice">
  <thead>
    <tr>
      <th>Component</th>
      <th>Version</th>
      <th>Release Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>ubuntu-jammy stemcell</td><td>1.406</td><td></td></tr>
    <tr><td>backup-and-restore-sdk</td><td>1.19.8</td>
      <td>
        <details>
          <summary>v1.19.8</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **v2:** Updated to v2.17.0.<br>For more information, see [v2](https://github.com/onsi/ginkgo).
  * **gomega:** Updated to v1.32.0.<br>For more information, see [gomega](https://github.com/onsi/gomega).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>binary-offline-buildpack</td><td>1.1.10</td><td></td></tr>
    <tr><td>bosh-dns-aliases</td><td>0.0.4</td><td></td></tr>
    <tr><td>bpm</td><td>1.2.17</td><td></td></tr>
    <tr><td>capi</td><td>1.175.0</td><td></td></tr>
    <tr><td>cf-autoscaling</td><td>250.2.2</td>
      <td>
        <details>
          <summary>v250.2.2</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Bump dependencies
  **Full Changelog**: https://github.com/pivotal-cf/cf-autoscaling-release/compare/v250.2.2...v250.2.2
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>cf-cli</td><td>1.60.0</td><td></td></tr>
    <tr><td>cf-networking</td><td>3.45.0</td>
      <td>
        <details>
          <summary>v3.45.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Go dependency bumps
  - Added config for staticcheck
  - Removed references to consul from documentation
  ## Bosh Job Spec changes:
  ```diff
  diff --git a/jobs/policy-server-asg-syncer/spec b/jobs/policy-server-asg-syncer/spec
  index 748c39a7..4c6c9a4e 100644
  --- a/jobs/policy-server-asg-syncer/spec
  +++ b/jobs/policy-server-asg-syncer/spec
  @@ -109,7 +109,7 @@ properties:
  description: "Trusted CA for UAA server."
  uaa_hostname:
  -    description: "Host name for the UAA server.  E.g. the service advertised via Consul DNS.  Must match common name in the UAA server cert. Must be listed in `uaa.zones.internal.hostnames`."
  +    description: "Host name for the UAA server.  E.g. the service advertised via Bosh DNS.  Must match common name in the UAA server cert. Must be listed in `uaa.zones.internal.hostnames`."
  default: uaa.service.cf.internal
  uaa_port:
  diff --git a/jobs/policy-server-internal/spec b/jobs/policy-server-internal/spec
  index 7095775d..029e723f 100644
  --- a/jobs/policy-server-internal/spec
  +++ b/jobs/policy-server-internal/spec
  @@ -41,7 +41,7 @@ properties:
  default: 31946
  health_check_timeout_seconds:
  -    description: "Health check timeout for Consul DNS."
  +    description: "Health check timeout"
  default: 5
  internal_listen_port:
  @@ -52,7 +52,7 @@ properties:
  description: "Trusted CA certificate that was used to sign the vxlan policy agent's client cert and key."
  server_cert:
  -    description: "Server certificate for TLS. Must have common name that matches the Consul DNS name of the policy server, eg `policy-server.service.cf.internal`."
  +    description: "Server certificate for TLS. Must have common name that matches the Bosh DNS name of the policy server, eg `policy-server.service.cf.internal`."
  server_key:
  description: "Server key for TLS."
  diff --git a/jobs/policy-server/spec b/jobs/policy-server/spec
  index 0d9f5157..8e2ccfa8 100644
  --- a/jobs/policy-server/spec
  +++ b/jobs/policy-server/spec
  @@ -101,7 +101,7 @@ properties:
  description: "Trusted CA for UAA server."
  uaa_hostname:
  -    description: "Host name for the UAA server.  E.g. the service advertised via Consul DNS.  Must match common name in the UAA server cert. Must be listed in `uaa.zones.internal.hostnames`."
  +    description: "Host name for the UAA server.  E.g. the service advertised via Bosh DNS.  Must match common name in the UAA server cert. Must be listed in `uaa.zones.internal.hostnames`."
  default: uaa.service.cf.internal
  uaa_port:
  ```
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/cf-networking-release/compare/v3.44.0...v3.45.0
  ## Resources
  - [Download release 3.45.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/cf-networking-release?version=3.45.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>cflinuxfs3</td><td>0.387.0</td><td></td></tr>
    <tr><td>cflinuxfs4</td><td>1.82.0</td><td></td></tr>
    <tr><td>count-cores-indicator</td><td>2.0.0</td><td></td></tr>
    <tr><td>credhub</td><td>2.12.66</td><td></td></tr>
    <tr><td>diego</td><td>2.96.0</td>
      <td>
        <details>
          <summary>v2.96.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Bump to golang 1.21.8
  - Golang package dependency bumps
  - Includes moving from docker v20 to docker v26
  - Includes moving from pgx v3 to pgx v5
  - Remove references to Consul from boshrelease + documentation
  - Many fixes to remove deprecated code and otherwise fix linter violations.
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/diego-release/compare/v2.95.0...v2.96.0
  ## Resources
  - [Download release 2.96.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/diego-release?version=2.96.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>dotnet-core-offline-buildpack</td><td>2.4.26</td><td></td></tr>
    <tr><td>garden-runc</td><td>1.51.0</td>
      <td>
        <details>
          <summary>v1.51.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Bumped Golang to 1.21.8
  - Golang package dependency bumps
  - Many updates to get codebase passing the staticcheck linker
  - Updated garden-integration-tests to be a little less flakey
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/garden-runc-release/compare/v1.50.0...v1.51.0
  ## Resources
  - [Download release 1.51.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/garden-runc-release?version=1.51.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>go-offline-buildpack</td><td>1.10.17</td><td></td></tr>
    <tr><td>java-offline-buildpack</td><td>4.67.1</td><td></td></tr>
    <tr><td>java-native-image-cnb-buildpack</td><td>0.10.0</td>
      <td>
        <details>
          <summary>0.10.0</summary>
          <pre style="max-width: 30em">
  Components:
  * [buildpack v0.12.0](https://github.com/pivotal-cf/java-native-image-cnb-buildpack/releases/tag/v0.12.0)
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>log-cache</td><td>3.0.11</td><td></td></tr>
    <tr><td>loggregator</td><td>107.0.13</td><td></td></tr>
    <tr><td>loggregator-agent</td><td>8.0.2</td><td></td></tr>
    <tr><td>mapfs</td><td>1.2.63</td>
      <td>
        <details>
          <summary>v1.2.63</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **v2:** Updated to v2.17.0.<br>For more information, see [v2](https://github.com/onsi/ginkgo).
  * **mapfs:** Updated to v`5381efc`.<br>For more information, see [mapfs](https://github.com/cloudfoundry/mapfs).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>metric-registrar</td><td>3.0.2</td><td></td></tr>
    <tr><td>mysql-monitoring</td><td>10.12.0</td>
      <td>
        <details>
          <summary>v10.12.0</summary>
          <pre style="max-width: 30em">
  - Updates golang to 1.22.1
  - Updates packages and dependencies
  - #186647418 - mysql-diag should report cluster status and disk metrics more concisely
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>nats</td><td>56.15.0</td><td></td></tr>
    <tr><td>nfs-volume</td><td>7.1.59</td>
      <td>
        <details>
          <summary>v7.1.59</summary>
          <pre style="max-width: 30em">
  ## Changes
  * Bump util-linux from 2.39.3 to 2.40 (#853)
  ## Dependencies
  * **nfsbroker:** Updated to v`7bc7bb0`.<br>For more information, see [nfsbroker](https://github.com/cloudfoundry/nfsbroker).
  * **nfsv3driver:** Updated to v`15c152b`.<br>For more information, see [nfsv3driver](https://github.com/cloudfoundry/nfsv3driver).
          </pre>
        </details>
        <details>
          <summary>v7.1.58</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **nfsbroker:** Updated to v`e850d95`.<br>For more information, see [nfsbroker](https://github.com/cloudfoundry/nfsbroker).
  * **nfsv3driver:** Updated to v`8af81b5`.<br>For more information, see [nfsv3driver](https://github.com/cloudfoundry/nfsv3driver).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>nginx-offline-buildpack</td><td>1.2.12</td><td></td></tr>
    <tr><td>nodejs-offline-buildpack</td><td>1.8.23</td><td></td></tr>
    <tr><td>notifications</td><td>69.0.0</td><td></td></tr>
    <tr><td>notifications-ui</td><td>47.0.0</td><td></td></tr>
    <tr><td>otel-collector</td><td>0.4.0</td><td></td></tr>
    <tr><td>php-offline-buildpack</td><td>4.6.17</td><td></td></tr>
    <tr><td>push-apps-manager-release</td><td>677.0.41</td><td></td></tr>
    <tr><td>push-offline-docs-release</td><td>6.0.169</td><td></td></tr>
    <tr><td>push-usage-service-release</td><td>674.0.94</td>
      <td>
        <details>
          <summary>v674.0.94</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **app-usage-service:** Updated to v`9af4b6b`.<br>For more information, see [app-usage-service](https://github.com/pivotal-cf/app-usage-service).
          </pre>
        </details>
        <details>
          <summary>v674.0.93</summary>
          <pre style="max-width: 30em">
  ## Changes
  ## Dependencies
  * **app-usage-service:** Updated to v`4c2a77a`.<br>For more information, see [app-usage-service](https://github.com/pivotal-cf/app-usage-service).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>pxc</td><td>1.0.25</td>
      <td>
        <details>
          <summary>v1.0.25</summary>
          <pre style="max-width: 30em">
  - Updates golang to 1.22.1
  - Modifies bootstrap errand behavior; bootstrap now only executes on a single pxc node, removing the need for the user to designate the specific node for execution.
  - Introduces property `engine_config.log_slow_verbosity` increasing the information reported in slow query logs
  - Updates packages and dependencies
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>python-offline-buildpack</td><td>1.8.22</td><td></td></tr>
    <tr><td>r-offline-buildpack</td><td>1.2.10</td><td></td></tr>
    <tr><td>routing</td><td>0.295.0</td>
      <td>
        <details>
          <summary>v0.295.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Resolves #401 by reverting the removal of the deprecated BuildNameToCertificate() call
  - Bumps to golang 1.21.9 + golang.org/x/net 0.23.0 to patch CVE-2023-45288
  ## ✨  Built with go 1.21.9
  **Full Changelog**: https://github.com/cloudfoundry/routing-release/compare/v0.294.0...v0.295.0
  ## Resources
  - [Download release 0.295.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/routing-release?version=0.295.0).
          </pre>
        </details>
        <details>
          <summary>v0.294.0</summary>
          <pre style="max-width: 30em">
  ⚠️ This release contains a known issue: gorouter will no longer present the most specific certificate match but rather the first certificate that matches. See https://github.com/cloudfoundry/routing-release/issues/401 for details. Upgrading to routing-release 0.295.0 is advised. ⚠️
  ## Changes
  - [Bump haproxy to 2.8.7](https://github.com/cloudfoundry/routing-release/commit/13b39eb5185656c3557c1ab15b5b13752b2ff6d8)
  - [update templates to not refer to consul](https://github.com/cloudfoundry/routing-release/commit/8216c056b1463bd1d7bf636a749568f70cb924d2)
  - [Default the routing_api.enabled_api_endpoints to mtls](https://github.com/cloudfoundry/routing-release/commit/2e96c2c932f7f945c3c7c15a768d0affc80de446)
  - [Update template test for mTLS routing api default](https://github.com/cloudfoundry/routing-release/commit/469d9e0a4eb0ac6015695ba27c6da80576b29801)
  - [Upgrade cf-cli-8-linux](https://github.com/cloudfoundry/routing-release/commit/b19a25052ed7982c83524ac87d22ed2f316201a2)
  ## Bosh Job Spec changes:
  ```diff
  diff --git a/jobs/routing-api/spec b/jobs/routing-api/spec
  index 1d7efe3c..2e5cd361 100644
  --- a/jobs/routing-api/spec
  +++ b/jobs/routing-api/spec
  @@ -95,7 +95,7 @@ properties:
  routing_api.enabled_api_endpoints:
  description: "Protocols that the routing api will listen on. Possible values: 'mtls', or 'both' (mTLS + HTTP)"
  -    default: "both"
  +    default: "mtls"
  routing_api.mtls_port:
  description: "Port on which Routing API is running, listening with mTLS."
  default: 3001
  ```
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/routing-release/compare/v0.293.0...v0.294.0
  ## Resources
  - [Download release 0.294.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/routing-release?version=0.294.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>ruby-offline-buildpack</td><td>1.10.11</td><td></td></tr>
    <tr><td>web-servers-cnb-buildpack</td><td>0.11.0</td><td></td></tr>
    <tr><td>silk</td><td>3.45.0</td>
      <td>
        <details>
          <summary>v3.45.0</summary>
          <pre style="max-width: 30em">
  ## Changes
  - Fixes to stop using deprecated code in tests (`net.Error.Temporary()`)
  - Remove consul references from documentation
  - Fix issues bumping the code.cloudfoundry.org/executor package
  - Go package bumps
  ## Bosh Job Spec changes:
  ```diff
  diff --git a/jobs/silk-controller/spec b/jobs/silk-controller/spec
  index a0966a01..cc7529a8 100644
  --- a/jobs/silk-controller/spec
  +++ b/jobs/silk-controller/spec
  @@ -45,11 +45,11 @@ properties:
  default: 46455
  health_check_port:
  -    description: "Health check port for silk controller. Used by the Consul DNS health check."
  +    description: "Health check port for silk controller. Used by the Bosh DNS health check."
  default: 19683
  health_check_timeout_seconds:
  -    description: "Health check timeout for Consul DNS."
  +    description: "Health check timeout"
  default: 5
  listen_ip:
  @@ -64,7 +64,7 @@ properties:
  description: "Trusted CA certificate that was used to sign the silk daemon client cert and key."
  server_cert:
  -    description: "Server certificate for TLS. Must have common name that matches the Consul DNS name of the silk controller, eg silk-controller.service.cf.internal"
  +    description: "Server certificate for TLS. Must have common name that matches the Bosh DNS name of the silk controller, eg silk-controller.service.cf.internal"
  server_key:
  description: "Server key for TLS."
  diff --git a/jobs/silk-daemon/spec b/jobs/silk-daemon/spec
  index 7a1525b3..e3786357 100644
  --- a/jobs/silk-daemon/spec
  +++ b/jobs/silk-daemon/spec
  @@ -70,7 +70,7 @@ properties:
  default: 3457
  silk_controller.hostname:
  -    description: "Host name for the silk controller.  E.g. the service advertised via Consul DNS.  Must match common name in the silk_controller.server_cert"
  +    description: "Host name for the silk controller.  E.g. the service advertised via Bosh DNS.  Must match common name in the silk_controller.server_cert"
  default: "silk-controller.service.cf.internal"
  silk_controller.listen_port:
  diff --git a/jobs/vxlan-policy-agent/spec b/jobs/vxlan-policy-agent/spec
  index 3118022b..802f04bb 100644
  --- a/jobs/vxlan-policy-agent/spec
  +++ b/jobs/vxlan-policy-agent/spec
  @@ -41,7 +41,7 @@ properties:
  default: false
  policy_server.hostname:
  -    description: "Host name for the policy server.  E.g. the service advertised via Consul DNS.  Must match common name in the policy_server.server_cert"
  +    description: "Host name for the policy server.  E.g. the service advertised via Bosh DNS.  Must match common name in the policy_server.server_cert"
  default: "policy-server.service.cf.internal"
  policy_server.internal_listen_port:
  ```
  ## ✨  Built with go 1.21.8
  **Full Changelog**: https://github.com/cloudfoundry/silk-release/compare/v3.44.0...v3.45.0
  ## Resources
  - [Download release 3.45.0 from bosh.io](https://bosh.io/releases/github.com/cloudfoundry/silk-release?version=3.45.0).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>smb-volume</td><td>3.1.61</td>
      <td>
        <details>
          <summary>v3.1.61</summary>
          <pre style="max-width: 30em">
  ## Dependencies
  * **v2:** Updated to v2.17.0.<br>For more information, see [v2](https://github.com/onsi/ginkgo).
  * **gomega:** Updated to v1.32.0.<br>For more information, see [gomega](https://github.com/onsi/gomega).
  * **smbbroker:** Updated to v`bab4864`.<br>For more information, see [smbbroker](https://github.com/cloudfoundry/smbbroker).
  * **smbdriver:** Updated to v`7f3242d`.<br>For more information, see [smbdriver](https://github.com/cloudfoundry/smbdriver).
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>smoke-tests</td><td>4.8.5</td><td></td></tr>
    <tr><td>staticfile-offline-buildpack</td><td>1.6.11</td><td></td></tr>
    <tr><td>statsd-injector</td><td>1.11.39</td><td></td></tr>
    <tr><td>syslog</td><td>12.2.3</td><td></td></tr>
    <tr><td>system-metrics-scraper</td><td>4.0.7</td><td></td></tr>
    <tr><td>uaa</td><td>77.4.0</td>
      <td>
        <details>
          <summary>v77.4.0</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  ### New UAA
  * Bump to [UAA v77.4.0](https://github.com/cloudfoundry/uaa/releases/tag/v77.4.0)
  ### Dependency Bumps
  * Bump github.com/cloudfoundry/bosh-utils from 0.0.452 to 0.0.453 in /src/acceptance_tests by @dependabot in https://github.com/cloudfoundry/uaa-release/pull/834
  **Full Changelog**: https://github.com/cloudfoundry/uaa-release/compare/v77.3.0...v77.4.0
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>tanzu-jammy-stack</td><td>1.0.1</td><td></td></tr>
  </tbody>
</table>



## <a id='new-features'></a> New features in <%= vars.app_runtime_full %> <%= vars.v_major_version %>

These are the new features for <%= vars.app_runtime_full %> <%= vars.v_major_version %>.

### Reduced logging and metric infrastructure requirements

If you do not use the legacy V1 and V2 Loggregator Firehoses, you now can scale Doppler and Traffic Controller VMs down to zero. This can
significantly reduce costs or free up resources for running additional workloads on the platform.
You might not be able to scale down to zero if you use integrations or other features that depend on the Firehose, such as log and metric nozzles or
Metric Registrar.

### Reintroduction of global log rate limit

<%= vars.app_runtime_abbr %> v3.0 introduced granular app log rate limits for fine-grained control over application log rates.

<%= vars.app_runtime_abbr %> v4.0 removed the older global log rate limit feature **App log rate limit (deprecated)** under **App Containers**. This was problematic for operators who were performing a jump upgrade to <%= vars.app_runtime_abbr %> v4.0 (skipping v3.0), as logs
would not be rate limited until application-based log rate limits were applied.

<%= vars.app_runtime_abbr %> <%= vars.v_major_version %> restores the global log rate limit, so that operators can perform upgrades while retaining log rate limits. Operators
must configure the same setting separately for both <%= vars.segment_runtime_full %> and <%= vars.windows_runtime_abbr %>.

If you had previously set a global log rate limit, this limit is re-applied following the upgrade to
<%= vars.app_runtime_full %> <%= vars.v_major_version %>.

### App Autoscaler supports scaling on CPU entitlement

<%= vars.app_runtime_full %> <%= vars.v_major_version %> introduces support for autoscaling on CPU entitlement. This
improves App Autoscaler support for scaling on CPU. Previously, App Autoscaler CPU rules could be brittle due to
their dependency on the underlying Diego Cell configuration. With this feature, apps can autoscale on the CPU
entitlement available, calculated appropriately based on the memory allocated.

## <a id='breaking-changes'></a> Breaking changes

These are the breaking changes for <%= vars.app_runtime_full %> <%= vars.v_major_version %>.

### Default stacks no longer include cflinuxfs3

New installations of <%= vars.app_runtime_abbr %> <%= vars.v_major_version %> no longer default to include cflinuxfs3 in the list of stacks.
Operators can continue to [Cloud Controller](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_version %>/tas-for-vms/config-cloud-controller.html)
to install cflinuxfs3, if desired.

Upgrading an existing foundation to <%= vars.app_runtime_abbr %> <%= vars.v_major_version %> does not remove cflinuxfs3.
Apps running on cflinuxfs3 continue to run as normal, and developers can continue to push applications using the cflinuxfs3 stack.
However, if operators [remove cflinuxfs3](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_version %>/tas-for-vms/stack-auditor.html)
from an existing foundation,
then cflinuxfs3 is no longer installed when deploying <%= vars.app_runtime_abbr %>,
unless the default stack list is configured to include cflinuxfs3 (see above).

Support for the cflinuxfs3 stack is deprecated and will be removed in a future release of <%= vars.app_runtime_abbr %>.
If you have not already, migrate all applications off of cflinuxfs3 and remove the stack from your foundations.

### Absolute CPU Entitlement metrics no longer available

The `absolute_entitlement` and `absolute_usage` metrics are no longer emitted for each container. They are replaced by the `cpu_entitlement`
metric. If you have any dashboards that reference the `absolute_entitlement` and `absolute_usage` metrics, update the dashboards to use the new metric.

Due to the removal of these metrics, the experimental CPU Entitlement Plug-in no longer functions. If you use this plug-in to view
CPU entitlement usage, you can instead view the `cpu_entitlement` metric, for example using the Log Cache cf CLI plug-in.

## Breaking changes if you are starting from TAS 5.0

If you are upgrading from TAS 5.0 to TAS 6.0, review the following breaking changes to ensure a smooth upgrade.

### App Autoscaler requires JRE 17

If you have customized the Java offline buildback to use a JRE other than OpenJDK and the default JRE version in the buildpack or defined by an environment variable group is not JRE 17, then you might see errors when deploying the App Autoscaler API.
For example:

```console
ERR     java.lang.UnsupportedClassVersionError: org/springframework/boot/loader/JarLauncher has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 55.0
```

Ensure that JRE 17 us available in your Java Offline Buildpack.
If the Java Runtime you are using is the Oracle JRE, then upgrade to a version of TAS that ships with cf-autoscaling version 249.2.6. As of that version of cf-autoscaling, the autoscale-api application configures `JBP_CONFIG_ORACLE_JRE` to self-select Oracle JRE 17.
Alternatively, you can temporarily override your buildpack defaults to run the deploy-autoscaler errand:

1. Set an environment variable group that changes the default version of Java to 17 across all applications in a foundation. For example: 

    ```
    $ cf set-staging-environment-variable-group '{"JBP_DEFAULT_OPEN_JDK_JRE":"{jre: {version: 17.+ }}"}'
    ```

1. Generate the correct parameters for your java runtime by viewing the options available in the java buildpack. Also be careful to merge your new parameters with any parameters already set in the environment variable group.
1. Trigger the deploy-autoscaler errand and see it succeed.
1. Remove the parameters that you added to the environment variable group and re-set the remaining parameters to undo your changes.

### Spring AutoReconfiguration library supplied by the buildpack is deprecated

The Spring AutoReconfiguration library supplied by the buildpack is deprecated, as well as the Spring Cloud Connectors project. It is recommended that you use the [java-cfenv](https://github.com/pivotal-cf/java-cfenv/) library instead for accessing bound services in Spring Boot apps. To make it easier to migrate to this library, the Java Buildpack will now install the Java CfEnv library for Spring Boot 3 apps only, and the Spring AutoReconfiguration library will no longer be installed for these apps.

Apps may be affected if they have already been migrated to Spring Boot 3 and are relying on Spring Autoreconfiguration; that is:

1. You have not set the variable `JBP_CONFIG_SPRING_AUTO_RECONFIGURATION '{enabled: false}'`.
1. The app is bound to a service of one of these types:
    * Cassandra
    * Relational Database
    * RabbitMQ
    * Mongo DB
    * Redis
    * SMTP
1. The startup logs for the app will show a log entry such as `dataSource` bean of type with `javax.sql.DataSource` reconfigured with `mysql` bean.

Apps using Spring Boot 2.x will continue to receive the Spring AutoReconfiguration library and should not be affected by this change.

In most cases, the Java CfEnv library should replace the functionality of the Spring Autoreconfiguration library for Spring Boot 3 apps. The Java CfEnv library examines bound services of the above types (except SMTP) and sets well-known Spring Boot properties so that Spring Boot's Autoconfiguration can kick-in.

### The UAA SAML IdP functionality has been removed

UAA's ability to act as a SAML identity provider has been removed in preparation for replacing its dependency on Spring SAML Extension with Spring Security SAML 2 support. You can no longer use UAA as your SAML IdP.

Spring SAML Extension has reached the end of support. UAA is replacing it with Spring Security SAML 2 support to keep the SAML feature compatible with latest Spring versions. Since Spring Security does not provide Identity Provider support, UAA is dropping its SAML IdP functionality.

Note that UAA’s ability to integrate with an upstream SAML identity provider as a SAML service provider is unaffected by this change.

If you use UAA as a SAML IdP, you will be affected. If you are unsure, get the list of registered SAML service providers from UAA’s `/saml/service-providers` endpoint. (See [https://docs.cloudfoundry.org/api/uaa/version/76.31.0/#list](https://docs.cloudfoundry.org/api/uaa/version/76.31.0/#list).) If you get a non-empty list in response, then you are using UAA as a SAML IdP.

Note that `/saml/service-providers` endpoint has been also removed from the latest UAA version as part of the SAML IdP functionality removal.

UAA now supports acting as an identity provider over OIDC. If the system that acts as a SAML service provider can also integrate with OIDC identity providers, switch to use that protocol instead.

### Local UAA password policy configuration changed

If you have customized the password policy settings for local UAA users, these settings will be restored to the default policy unless you take action.

In previous TAS versions, the local UAA password policies could be configured only if you selected the **Internal user store** option in the Authentication and Enterprise SSO pane. The local UAA password policy configuration option is now moved to the UAA pane, where you can customize the settings regardless of the Authentication and Enterprise SSO option you chose.

If you currently have configured the local UAA user password policy by setting the fields under the **Internal user store** option in the Authentication and Enterprise SSO pane, then your existing settings will be affected.

To prevent problems, you can instead configure the password policies for local UAA users in a new section on the UAA pane of the TAS tile. This configuration section is available in TAS 4.0 and 5.0 and will be preserved in the upgrade to 6.0. 

### Gorouter uses port 7070 by default for internal route services

See [this section](#gorouter-uses-port-7070-by-default-for-internal-route-services-instead-of-a-random-available-port) for details.


## Breaking changes if you are starting from TAS 4.0

If you are upgrading from TAS 4.0 to TAS 6.0, review the following breaking changes to ensure a smooth upgrade.

### MySQL 5.7 external system database support removed

Your TAS for VMs deployment will fail or become insecure if you are using MySQL 5.7 as TAS's external system database because MySQL 5.7 has reached its End-Of-Life (31 Oct 2023).

If you have configured a MySQL 5.7 database instance as the external system database for your TAS deployment, this change will affect you. You can check your current system database settings by going to the **Databases** pane in the TAS for VMs tile. 
Check the **System databases location** section. If the **External database server** option is selected and the configured database server is based on MySQL 5.7, you 
will have to upgrade your external system database to a supported MySQL version (such as MySQL 8.0).

This change was triggered by the fact that MySQL 5.7 has reached its official End-Of-Life date (31 Oct 2023), and many TAS components and the database client libraries they depend on will follow suit by removing support and testing for MySQL 5.7.  

### NATS intentionally fails deployment in post-start in v1

Operators can ensure successful deployment of NATS servers, which propagate routes from services and apps to Gorouter, by confirming that their nats-release instances have successfully migrated to NATS v2.
 
If your TAS environment is already on v2.11.26 or greater, make sure that your NATS instances have successfully migrated by checking that NATS 2.0 is running. See [How to confirm your nats servers are running NATs v2](https://community.pivotal.io/s/article/How-to-confirm-your-nats-servers-are-running-NATs-v2?language=en_US).

If your deployment fails, check the NATS instance logs. Migration details, including any possible error messages, can be found under `/var/vcap/sys/log/nats-tls/nats-tls-wrapper.stdout.log`.

In TAS v2.11.26, nats-release upgraded its underlying software package from NATS 1.0 (package name `gnatsd`) to NATS 2.0 (package name `nats-server`). The nats-release contains NATS 1.0, which will start as a fallback in case the migration to NATS 2.0 fails. In preparation for the future removal of NATS 1.0, nats-release will fail in post-start if it detects that NATS 1.0 is running instead of NATS 2.0.

### App Autoscaler API no longer accepts trailing slashes

Existing clients of the App Autoscaler API may break if they make resource requests that
include trailing slashes.

If you have written code that makes requests to the App Autoscaler API with trailing slashes or if you have documentation that describes making requests with trailing slashes you will be affected.

Requests that specify trailing slashes will now receive a 404 response.
This does not affect users who are using the Autoscaler cf CLI plug-in.

This is a Spring Framework default change to [improve security posture](https://github.com/spring-projects/spring-framework/issues/28552).

To prevent or solve this problem, modify your client or documentation to no longer make requests with trailing slashes.

See also the TAS for VMs 5.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/5.0/tas-for-vms/runtime-rn.html).

### Logging timestamp format changed for some TAS for VMs [Windows] jobs

Existing automation that parses logs from TAS for VMs [Windows] components may break if it is still expecting timestamps formatted as epoch time. Specifically, logs from groot and garden_windows have been converted to RFC 3339 timestamps.

This will affect you if you have log parsing for TAS for VMs [Windows]'s groot and garden_windows jobs that rely on timestamps being in epoch format.

If it was necessary to adjust log parsing for TAS and TAS for VMs [Windows] 4.0 to account for the change in timestamp format, update log parsing in the same manner, but for the TAS for VMs [Windows] groot and garden_windows jobs.

The logging timestamp format was changed for some TAS for VMs [Windows] jobs because non-standardized and non-human readable timestamps in logs make debugging TAS more difficult. Starting in TAS/TASW 4.0, timestamps have been logged using RFC 3339 format in all cases but groot and garden_windows.

See also the TAS for VMs 5.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/5.0/tas-for-vms/runtime-rn.html).

### Logging timestamp format property removed

Existing automation that configures a log timestamp format will break if product config is not updated.

You are affected if you set the logging_timestamp_format product config property.

This property has had no effect since TAS 4.0. Update your configuration to no longer specify the property.

The logging timestamp format property was removed because non-standardized and non-human readable timestamps in logs make debugging TAS more difficult.

See also the TAS for VMs 5.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/5.0/tas-for-vms/runtime-rn.html).

### Syslog Aggregate Drains property changes

You will be affected by this change if you have configured aggregate syslog drains with the `syslog_agent_aggregate_drains` property.
Existing automation that configures aggregate syslog drains will break if the product config is not updated. 

References to the old property should be updated to refer to the `new mtls_syslog_agent_aggregate_drains` property.
This property is used to define aggregate syslog drains with keys and certificates for Mutual TLS, and to define aggregate drains that are not using Mutual TLS.
From TAS 5.0, operators can configure aggregate drains that support Mutual TLS for improved security. This necessitated changing the structure of the syslog aggregate drains property to allow these new fields to be specified.

Comma-separated strings are no longer accepted, instead pass an array of aggregate drains:

```
.properties.mtls_syslog_agent_aggregate_drains:
  value:
  - url: syslog-tls://HOSTNAME:PORT
  - url: syslog-tls://ANOTHER-HOSTNAME:PORT
```

Additionally, consider if your syslog aggregate drains should be updated to use Mutual TLS.

See also the TAS for VMs 5.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/5.0/tas-for-vms/runtime-rn.html).

### Metrics Agent deprecated and defaults to off

The behavior of any custom integration using Prometheus to scrape the Metrics Agent will change. The Metrics Agent is protected by mutual TLS, and for access, it would require using a certificate issued by TAS. We do not know of any products or integrations that use this agent. 

You will see this change if you have built a custom integration that scrapes all VMs usingPprometheus on port 14726.
See the TAS for VMs 5.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/5.0/tas-for-vms/runtime-rn.html) for more information.

The Metrics Agent was designed as a way for Healthwatch and other components to retrieve metrics without using the Loggregator Firehose. No components ended up adopting it, and with the introduction of the OpenTelemetry Collector, there are now much more flexible options for egressing metrics. For this reason, we are slating it for removal rather than driving adoption towards it.

If you are using the Metrics Agent, it is possible in TAS 5.0 to reenable it by unselecting the check box in the **System Logging configuration** page. A better solution is to switch to using the Prometheus Exporter in the OpenTelemetry Collector. If you
are unable to migrate to the Prometheus Exporter, contact [Support](https://tanzu.vmware.com/support); the Metrics Agent is slated for removal in TAS 6.0.


## Breaking changes if you are starting from TAS for VMs 2.13

If you are upgrading from TAS 4.0 to TAS 6.0, review the following breaking changes to ensure a smooth upgrade.

### App logs that exceed rate limit are dropped immediately

The behavior of line-based application log rate limiting has changed. Previously application logs would be buffered to some extent and then released at the configured rate. Now application logs that exceed the rate limit are dropped immediately. For more information, see the TAS for VMs 2.13 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.13/tas-for-vms/runtime-rn.html#v21310-30).

You will encounter this behavior if you have configured the deprecated line-based application log rate limiting and have applications that emit logs in excess of the configured limit. 
This is expected behavior and helps ensure that logs that are output are timely. VMware recommends use of quota-based log rate limits for fine-grained control over application log rates.

This behavior was modified as part of changes to Diego to support granular log rate limits on orgs, spaces and individual apps in TAS for VMs 3.0.

### Syslog Drains reject SHA-1 certificates

Logging components provided by loggregator-agent-release have been upgraded to Go 1.18. From Go 1.18 the treatment of certificates is stricter and certificates signed with the SHA-1 hash function will be rejected. Go stopped accepting certificates signed with the SHA-1 hash function because of security concerns.

Review your configured application syslog drains. If you have a certificate for a syslog drain configured with a SHA-1 hash, your deployment will be affected.

If older SHA-1 hash funtion certificates are used, regenerate the old certificates so that they don't use the SHA-1 hash function.

For more information, see the TAS for VMs 2.12 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.12/tas-for-vms.pdf) for v2.2.12, and [https://go.dev/doc/go1.18#sha1](https://go.dev/doc/go1.18#sha1).

### Application log rate limit default

Applications pushed to TAS 3.0+ will inherit a default operator-configurable log rate limit if one is not specified. The ability to set the log rate limit in a granular way is intended to allow operators to protect both the logging system within TAS and external integrations that receive logs. Setting a platform default limit for new applications makes it more likely that applications will have a log rate limit set allowing quotas to be imposed.

If you are upgrading to TAS 3.0+ and are pushing applications to the platform, applications that already exist on the platform prior to upgrade will default to not being log rate limited.

Determine if the default log rate for new applications (16 K/s) is appropriate for your needs. If you have applications with verbose logs exceeding the default limit and do not want their logs to be dropped for exceeding the limit, then consider:

* pushing your applications with a specified app log rate limit
* modifying the platform default log rate limit

The default log rate limit for new applications is configurable in the **App Developer Controls** tab in the TAS for VMs product configuration. The corresponding property is `.properties.cloud_controller_default_log_rate_limit_app`.

See also the TAS for VMs 3.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/3.0/tas-for-vms.pdf). 

### Autoscaler service bindings duplicate index

Upgrading to a version of TAS that introduces a new database index for App Autoscaler on the service bindings table may result in errors if you have previously manually created the same index.

If you have previously manually added a database index following the instructions in the knowledge base article "Autoscale application fails with MySQL Deadlock errors" and you are upgrading to TAS for VMs 2.13.5 or 2.13.6, you need to upgrade to a newer patch release of TAS that does not have this limitation.

See also: 

* [TAS for VMs 2.13 release notes - 2.13.5](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.13/tas-for-vms/runtime-rn.html#v2135-35)
* [TAS for VMs 2.13 release notes - 2.13.7](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.13/tas-for-vms/runtime-rn.html#v2137-33)
* [Autoscale application fails with MySQL Deadlock errors KB article](https://community.pivotal.io/s/article/Autoscale-application-errors-with-MySQL-Deadlock)

### BOSH System Metrics Forwarder Removed

The BOSH System Metrics Forwarder is removed from TAS for VMs in favor of System Metrics server and scraper.

If you have been using the deprecated BOSH System Metrics Server and Forwarder, you will be affected by this change. You are using the BOSH System Metrics Server if you selected the **Enable BOSH System Metrics Server (deprecated)** option in the Ops Manager Director product configuration.
 
To continue receiving system metrics, you must select the **Enable System Metrics** check box in the Director Config pane of the BOSH Director tile.

To avoid deployment, platform automation, or data collection failures, you must update any queries that reference `bosh-system-metrics-forwarder` as the `source_id` for metrics to reference `system_metrics_agent` instead.

Additionally, metric names now include underscores instead of periods. For example, the metric named `system.cpu.sys` in previous versions of TAS for VMs is named `system_cpu_sys` in TAS for VMs v3.0+.

See also:

* [TAS for VMs 3.0 release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/3.0/tas-for-vms.pdf)
* [Tanzu Operations Manager release notes](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/3.0/vmware-tanzu-ops-manager/release-notes.html#bosh-system-metrics-server-is-removed)

### HAProxy removed

If your environment is running an HAProxy instance group, you must reconfigure your networking configurations. Otherwise, you will get a deployment error when upgrading to TAS 3.0. 
HAProxy was previously supported as an instance group in front of Gorouter to support features not offered by Gorouter. Now that Gorouter supports TLS termination, HAProxy is no longer needed.
 
To check if you are running HAProxy, open the **Networking** tab in Tanzu Operations Manager. Under the field **Routing TLS Termination**, if you see **HAProxy**, you must change your networking and resource configurations to point directly to Gorouter.

See also the TAS for VMs 3.0 [documentation](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/3.0/tas-for-vms.pdf).

### Log Cache nozzle ingess removed

Starting from TAS for VMs 3.0.0, Log Cache uses syslog ingress, and the option to use nozzle ingress has been removed. This is because Log Cache ingestion using the Reverse Log Proxy (RLP) has been removed.
 
If you have not selected the **Enable Log Cache syslog ingestion** option, or set the corresponding `.properties.enable_log_cache_syslog_ingestion` product property to `false`, you are affected. From TAS 3.0.0, this is no longer a supported configuration.
In addition, Diego Cells with high logging volume might experience higher CPU usage than they did prior to this change.
 
Confirm that your instances, including those within isolation segments, are permitted to establish connections to Log Cache nodes on port 6067. You may need to update firewall rules to allow logs to flow directly from your instances to the Log Cache syslog server.

Consider scaling your Diego Cells if you have applications with high logging volume due to the increased load from the syslog agent on the Diego Cell.

See also the TAS for VMs 3.0 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/3.0/tas-for-vms.pdf).

### ActiveLocks removed from Key Performance Indicators

If you are monitoring ActiveLocks on your environment, upgrading to TAS 3.0.0 will increase your metric by 1 if your environment Key Performance Indicators includes Locket ActiveLocks.

For a successful upgrade, you must remove this metric from any KPI monitoring you maintain.

ActiveLocks is a metric emitted by Locket, a distributed locking service used by multiple services in CloudFoundry. With the introduction of a new, opt-in service that uses Locket, the expected number of active locks increased by 1. Our community noted that a feature-dependent was a smell of a bad performance indicator; while the information is useful in debugging, it is not useful as a performance indicator and we no longer recommend monitoring it as an environment health metric.

### cflinuxfs4 as default stack may cause failures to push apps

cflinuxfs3 (backed by Ubuntu Bionic) has been deprecated in favor of cflinuxfs4 (backed by Ubuntu Jammy). If apps are configured to use the latest stack, upgrading TAS for VMs will upgrade the app stacks and may cause a push failure.

You can see what stack your apps are configured to use by running:

```
cf audit-stack
```

If the apps are followed by cflinuxfs3, they are running an outdated stack. You should re-stage your app to use cflinuxfs4 before upgrading TAS for VMs. This may entail updating the buildpack that your app uses. If fixing app staging is not possible before the TAS upgrade, you can configure apps to run on cflinuxfs3 as a temporary workaround. Resolve any push errors before doing the upgrade.

```
cf push <APP_NAME> -s cflinuxfs4
```

"Stacks" are the pre-built root file system that Cloud Foundry uses to create app containers. Keeping these up-to-date with operating system updates is key to updating security vulerabilities and other issues.

See also:
* [Managing apps and their stacks](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/4.0/tas-for-vms/managing-apps-stacks-index.html)
* [TAS cflinuxfs4 Migration Proposal](https://community.pivotal.io/s/article/TAS-cflinuxfs4-Migration?language=en_US) discusses stack change behaviors for each TAS for VMs release

### Diego and Routing Components More Strict With TLS Protocols

Diego and Routing components have been updated to be stricter with TLS protocols. External services and databases, end users, and services making requests to Gorouter should be using TLS 1.2 and have certificates signed with a hash that is newer and more secure than SHA-1, or else they will experience TLS errors.
 
For services communicating with Diego components, if your environment is affected, they will not be able to successfully make a connection to Diego. For external user services talking to Gorouter, you should see TLS errors in your access logs.

If you are using an external database, Diego will throw errors trying to start processes like Locket and BBS.

You can check the Signature Algorithm of your external database and external services with the following command:

```
echo '' | openssl s_client -connect <HOSTNAME>:<PORT> -servername <HOSTNAME> 2>/dev/null | openssl x509 -noout -text | grep 'Signature Algorithm'
```

You can check that TLS 1.2 is supported with the following command:

```
echo openssl s_client -connect google.com:443 -servername google.com -tls1_2 || echo "TLS 1.2 unsupported"
```

If you see no output, TLS 1.2 is supported. If you see the TLS 1.2 unsupported message, it is unsupported and will need to be updated.

Make sure that services talking to your Diego components and services talking to gorouter are not using TLS 1.0 or 1.1, or using SHA-1 certificates.

Diego and Routing components, including gorouter, use an up-to-date version of Golang. As of Golang 1.18, TLS requirements have been made more strict in two major ways. First, TLS 1.0 and 1.1 disabled in favor of TLS 1.2. Second, crypto/x509 will now reject certificates signed with the SHA-1 hash function. See Golang release notes for details.

See also [https://tip.golang.org/doc/go1.18](https://tip.golang.org/doc/go1.18).


## Breaking changes if you are starting from TAS for VMs 2.11

### Log Cache aggregate drain metadata missing

TAS 2.11.16 moved aggregate drain configuration to the syslog binding cache to improve deploy speed. Depending on your configuration, this could cause the Smoke Test errand to fail.

If **Enable Log Cache syslog ingestion** is selected and **Default loggregator drain metadata** is unselected, and you attempt to upgrade to a version of TAS for VMs from 2.11.16 to 2.11.21, this will affect you.

The corresponding product properties are:
* `.properties.enable_log_cache_syslog_ingestion`
* `.properties.default_loggregator_drain_metadata`

To avoid this problem, upgrade to TAS 2.11.22 or greater.

Operators may configure aggregate drains to send all application logs to a syslog destination. The same mechanism may be used within TAS for VMs to populate Log Cache. If metadata is not enabled for the Log Cache aggregate drain, then Log Cache will not have the metadata expected to function correctly.

See also the TAS for VMs 2.11 release notes:

* [2.11.16](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.11/tas-for-vms/runtime-rn.html#v21116)
* [2.11.22](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.11/tas-for-vms/runtime-rn.html#v21122)

### Minimize user downtime when upgrading from 2.11 to 2.12

To minimize downtime for developers pushing apps, upgrade from TAS for VMs v2.11.9 or later. Upgrading from earlier patch versions can result in an Unknown Error when pushing apps. With Cloud Controller in affected versions, there is a possibility that app `lifecycle_type` could be nil when determining app lifecycle.
 
If your current version of TAS is 2.11.0 through 2.11.8 and you are upgrading to TAS for VMs 2.12 or higher, this could cause a problem for you.
To prevent problems, upgrade to TAS 2.11.9 or higher before upgrading to 2.12 or higher.

For more information, see the Upgrade section in the TAS for VMs 2.12 [release notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/2.12/tas-for-vms.pdf).

### Envoy advertises HTTP2 support over ALPN

If applications do not support HTTP/2 when using Container-to-Container (C2C) communication through the Envoy proxy (ports 61001 or 61443), requests between these apps will fail.

You may be affected if you are using container-to-container networking, and you have network policies that allow apps to talk to other apps on ports 61001 or 61443.
Use the cf network-policies command to list the policies, and look for those ports.

To find out if you have this situation, investigate the destination applications for these policies to determine if they support HTTP/2 requests. If not, the client applications must be updated to negotiate down to HTTP/1.1 when making their requests.

Background details:
* ALPN is the Application-Layer Protocol Negotiation that allows HTTP connections to negotiate what protocols are supported.
* Envoy is a proxy sitting alongside each application container to facilitate TLS termination.

### Zipkin Trace-ID is now 16 Bytes

There is a possibility that your apps are not capable of processing the longer 8-byte Trace-ID header. If so, you may receive 400-level errors after Gorouter forwards requests to your app.
 
Foundations that do not enable Zipkin are not affected. To see if Zipkin is enabled, look at the **Networking** tab of the TAS tile in Tanzu Operations Manager, and see if **Enable Zipkin** is selected.

If Zipkin is enabled, applications incompatible with this change will throw errors related to Zipkin header length in their application or access logs.

The header size was increased from 8-bytes to 16-byes in accordance to the W3 standard; to resolve this, you must update your app to be able to handle 16-byte request headers.

Zipkin is a library that allows users to trace a request through mutliple componenets, with the help of a Trace-ID that is the same for the lifecycle of one request. Having a longer Trace-ID is in compliance with W3 standards and also decreases the chance of generating duplicate IDs.

For more information, see:
* [https://zipkin.io/pages/instrumenting.html](https://zipkin.io/pages/instrumenting.html)
* [https://www.w3.org/TR/trace-context/#trace-id](https://www.w3.org/TR/trace-context/#trace-id) 
* [https://docs.cloudfoundry.org/adminguide/zipkin_tracing.html](https://docs.cloudfoundry.org/adminguide/zipkin_tracing.html) 


## Breaking changes for TAS for VMs Ecosystem tiles (including ISV Partner tiles)

If your team is building a tile (integration) to be used with a compatible TAS version, you need to be aware of the following key changes in
TAS 6.0 that might affect these tiles. Depending on the nature of the offering, not all of the changes might be applicable.

Partners who have a pre-release binary agreement on file can test the compatibility of their offering by claiming a TAS 6.0 environment. 
We encourage ecosystem and partner teams to test and declare compatibility with TAS 6.0 in a timely manner so that our mutual customers can have a smooth upgrade experience.

### Gorouter uses port 7070 by default for internal route services instead of a random available port

**Check if your foundation is affected:**

1. SSH into a router VM.
2. Run `lsof -Pi` to find out if port 7070 is being used.
3. Next, check any routers deployed by IST, to find out if they are affected.

If your foundation is affected, use Tanzu Operations Manager to configure use of a different port.

For TAS for VMs, go to the **Networking** tab and scroll down to the **Route Services** section. If route services are enabled, you will see a text box labeled **The port used for internal route services requests**. Set the value to a known available port, or set the value to 0 to allow the operating system to choose an available port at deploy time.

For IST, go to the **Networking** tab and scroll down to the text box labeled **The port used for internal route services requests**. Set the value to a known available port, or set the value to 0 to allow the operating system to choose an available port at deploy time.

## <a id='known-issues'></a> Known issues

Here are the known issues for <%= vars.app_runtime_full %> <%= vars.v_major_version %>.

### Loggregator Agents in other products may log failure when Dopplers are scaled to zero

Service tile products can use Loggregator Agent to egress metrics for service instances. If the Doppler instance group is scaled to zero,
then Loggregator Agent jobs deployed by these products may repeatedly log a failure to connect to Doppler:

```
failed to connect: unable to lookup a log consumer
```
